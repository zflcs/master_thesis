@inproceedings {Adam2014,
author = {Adam and others},
title = {{IX}: A Protected Dataplane Operating System for High Throughput and Low Latency},
booktitle = {11th USENIX Symposium on Operating Systems Design and Implementation (OSDI 14)},
year = {2014},
isbn = {978-1-931971-16-4},
address = {Broomfield, CO},
pages = {49--65},
month = oct,
publisher = {USENIX Association},
}

@inproceedings {gruss_kaslr_2017,
address = {Cham},
title = {{KASLR} is {Dead}: {Long} {Live} {KASLR}},
isbn = {978-3-319-62105-0},
abstract = {Modern operating system kernels employ address space layout randomization (ASLR) to prevent control-flow hijacking attacks and code-injection attacks. While kernel security relies fundamentally on preventing access to address information, recent attacks have shown that the hardware directly leaks this information. Strictly splitting kernel space and user space has recently been proposed as a theoretical concept to close these side channels. However, this is not trivially possible due to architectural restrictions of the x86 platform.},
booktitle = {Engineering {Secure} {Software} and {Systems}},
author = {Gruss and others},
editor = {Bodden, Eric and Payer, Mathias and Athanasopoulos, Elias},
year = {2017},
pages = {161--176},
publisher = {Springer International Publishing},
}

@inproceedings {Livio2010,
author = {Livio and others},
title = {{FlexSC}: Flexible System Call Scheduling with {Exception-Less} System Calls},
booktitle = {9th USENIX Symposium on Operating Systems Design and Implementation (OSDI 10)},
year = {2010},
address = {Vancouver, BC},
month = oct,
publisher = {USENIX Association},
pages = {33–46},
numpages = {14},
}

@inproceedings{David2007,
author = {David and others},
title = {Context switch overheads for Linux on ARM platforms},
year = {2007},
isbn = {9781595937513},
address = {New York, NY, USA},
abstract = {Context switching imposes a performance penalty on threads in a multitasking environment. The source of this penalty is both direct overhead due to running the context switch code and indirect overhead due to perturbation of caches. We calculate indirect overhead by measuring the running time of tasks that use context switching and subtracting the direct overhead. We also measure the indirect overhead impact on the running time of tasks due to processor interrupt servicing. Experiment results are presented for the Linux kernel running on an ARM processor based mobile device platform.},
booktitle = {Proceedings of the 2007 Workshop on Experimental Computer Science},
pages = {3–es},
keywords = {operating system, context switch overhead},
location = {San Diego, California},
series = {ExpCS '07},
publisher = {Association for Computing Machinery},
}

@inproceedings{Tsafrir2007,
author = {Tsafrir and others},
title = {The context-switch overhead inflicted by hardware interrupts (and the enigma of do-nothing loops)},
year = {2007},
isbn = {9781595937513},
address = {New York, NY, USA},
abstract = {The overhead of a context switch is typically associated with multitasking, where several applications share a processor. But even if only one runnable application is present in the system and supposedly runs alone, it is still repeatedly preempted in favor of a different thread of execution, namely, the operating system that services periodic clock interrupts. We employ two complementing methodologies to measure the overhead incurred by such events and obtain contradictory results.The first methodology systematically changes the interrupt frequency and measures by how much this prolongs the duration of a program that sorts an array. The overall overhead is found to be 0.5-1.5\% at 1000 Hz, linearly proportional to the tick rate, and steadily declining as the speed of processors increases. If the kernel is configured such that each tick is slowed down by an access to an external time source, then the direct overhead dominates. Otherwise, the relative weight of the indirect portion is steadily growing with processors' speed, accounting for up to 85\% of the total.The second methodology repeatedly executes a simplistic loop (calibrated to take 1ms), measures the actual execution time, and analyzes the perturbations. Some loop implementations yield results similar to the above, but others indicate that the overhead is actually an order of magnitude bigger, or worse. The phenomenon was observed on IA32, IA64, and Power processors, the latter being part of the ASC Purple supercomputer. Importantly, the effect is greatly amplified for parallel jobs, where one late thread holds up all its peers, causing a slowdown that is dominated by the per-node latency (numerator) and the job granularity (denominator). We trace the bizarre effect to an unexplained interrupt/loop interaction; the question of whether this hardware mis-feature is experienced by real applications remains open.},
booktitle = {Proceedings of the 2007 Workshop on Experimental Computer Science},
pages = {4–es},
keywords = {ticks, operating system noise, clock interrupts},
location = {San Diego, California},
series = {ExpCS '07},
publisher = {Association for Computing Machinery},
}

@misc{IntelOptane,
title = {Intel® {Optane}™ {SSD} {DC} {P4800X} {Series} ({375GB}, 2.5in {PCIe} x4, {3D} {XPoint}™) {Product} {Specifications}},
url = {https://www.intel.com/content/www/us/en/products/sku/97161/intel-optane-ssd-dc-p4800x-series-375gb-2-5in-pcie-x4-3d-xpoint.html},
abstract = {Intel® Optane™ SSD DC P4800X Series (375GB, 2.5in PCIe x4, 3D XPoint™) quick reference guide including specifications, features, pricing, compatibility, design documentation, ordering codes, spec codes and more.},
language = {en},
year = {2024},
urldate = {2024-05-12},
author = {Intel},
}

@misc{WesternDigital,
title = {How to {Read} the {Ultrastar} {Model} {Number}},
url = {https://documents.westerndigital.com/content/dam/doc-library/en_us/assets/public/western-digital/product/data-center-drives/ultrastar-nvme-series/data-sheet-ultrastar-dc-sn200.pdf},
language = {en},
year = {2024},
author = {Western Digital},
}

@misc{InterEthernet,
title = {Intel® {82598EB} 10 {Gigabit} {Ethernet} {Controller}},
url = {https://www.intel.com/content/www/us/en/products/sku/36918/intel-82598eb-10-gigabit-ethernet-controller/specifications.html},
urldate = {2024-05-12},
year = {2024},
author = {Intel},
}

@misc{lwn2024,
title = {Driver porting: {Network} drivers},
url = {https://lwn.net/articles/30107/},
urldate = {2024-05-12},
year = {2024},
author = {corbet},
}

@inproceedings {AdamIX2014,
author = {Adam Belay and George Prekas and Ana Klimovic and Samuel Grossman and Christos Kozyrakis and Edouard Bugnion},
title = {{IX}: A Protected Dataplane Operating System for High Throughput and Low Latency},
booktitle = {11th USENIX Symposium on Operating Systems Design and Implementation (OSDI 14)},
year = {2014},
isbn = {978-1-931971-16-4},
address = {Broomfield, CO},
pages = {49--65},
url = {https://www.usenix.org/conference/osdi14/technical-sessions/presentation/belay},
publisher = {USENIX Association},
month = oct
}

@misc{DPDK,
title = {{Data} plane development kit.},
url = {https://www.dpdk.org/},
abstract = {DPDK is the open source Data Plane Development Kit that consists of libraries to accelerate packet processing workloads running on a wide variety of CPU architectures.},
language = {en-US},
urldate = {2024-05-12},
year = {2024},
author = {{DPDK}}
}

@misc{SPDK,
title = {Storage {Performance} {Development} {Kit}},
url = {https://spdk.io/},
urldate = {2024-05-12},
year = {2024},
author = {{SPDK}}
}

@misc{DDIO,
title = {Intel data direct {I}/{O} technology ({Intel} {DDIO}): {A} primer.},
url = {https://www.intel.com/content/dam/www/public/us/en/documents/technology-briefs/data-direct-i-o-technology-brief.pdf},
urldate = {2024-05-12},
year = {2024},
author = {Intel},
}


@inproceedings{nayak_comparison_2018,
address = {Cham},
title = {Comparison of {Accelerator} {Coherency} {Port} ({ACP}) and {High} {Performance} {Port} ({HP}) for {Data} {Transfer} in {DDR} {Memory} {Using} {Xilinx} {ZYNQ} {SoC}},
isbn = {978-3-319-63673-3},
abstract = {ZYNQ 7000 Embedded Processing Platform SOC is chips includes ARM dual core A9-MPCore Processor Processing System-(PS-Microprocessor) along with Xilinx Programmable Logic (PL)-Artix 7 FPGA on a single die. ZYNQ SoC provides the high performance and computing throughput at low power using PS along with the flexibility of PL. ZYNQ SoC incorporates independent interfaces for communication of data control signals between PL and PS in various configurations to access the system resources. This paper describes the performance evaluation of such interfaces in terms of resource utilization and power consumption. Here, in this paper, data transfer from PL to PS using low speed AXI GP port and high speed bus like AXI HP port and ACP (Accelerator Coherency) port is discussed. The paper includes design, implementation and testing results on Zynq-7000 SoC based Avnet Zed board.},
booktitle = {Information and {Communication} {Technology} for {Intelligent} {Systems} ({ICTIS} 2017) - {Volume} 1},
publisher = {Springer International Publishing},
author = {Nayak, Rikin J. and Chavda, Jaiminkumar B.},
editor = {Satapathy, Suresh Chandra and Joshi, Amit},
year = {2018},
pages = {94--102},
}

@inproceedings{Chen2010,
author={Chen, Xuhui and Yu, Guolong and Cheng, Huiyan},
booktitle={2010 Second International Conference on Computer Modeling and Simulation}, 
title={Approach to External Events of Real-Time Operating System Based on Polling}, 
year={2010},
volume={1},
number={},
pages={459-462},
keywords={Real time systems;Operating systems;Data communication;Predictive models;Delay;Computational modeling;Computer simulation;Discrete event simulation;Petrochemicals;Application software;RTOS;predictable;polling priority;grouping polling;external events},
doi={10.1109/ICCMS.2010.312}
}

@article{Guan2013,
author={Guan, HaiBing and Dong, YaoZu and Tian, Kun and Li, Jian},
journal={IEEE Journal on Selected Areas in Communications}, 
title={SR-IOV Based Network Interrupt-Free Virtualization with Event Based Polling}, 
year={2013},
volume={31},
number={12},
pages={2596-2609},
keywords={Cloud computing;Event detection;Virtual machine monitors;High-speed networks;Scalability;Virtualization;Event-based polling;Interrupt;SR-IOV},
doi={10.1109/JSAC.2013.131202}
}

@inproceedings{le2017latency,
title={I/o latency optimization with polling},
author={Le Moal, Damien},
booktitle={Vault Linux Storage and Filesystems Conference},
year={2017}
}

@misc{Stephen2017,
title = {Linux {Optimizations} for {Low} {Latency} {Block} {Devices} {\textbar} {SNIA}},
url = {https://www.snia.org/educational-library/linux-optimizations-low-latency-block-devices-2017},
urldate = {2024-05-12},
year = {2017},
author = {Stephen Bates, Huawei}
}

@inproceedings{Langendoen1996,
author={Langendoen, K. and Romein, J. and Bhoedjang, R. and Bal, H.},
booktitle={Proceedings of 6th Symposium on the Frontiers of Massively Parallel Computation (Frontiers '96)}, 
title={Integrating polling, interrupts, and thread management}, 
year={1996},
volume={},
number={},
pages={13-22},
keywords={Yarn;Kernel;Switches;Delay;Mathematics;Computer science;Communication system software;Communication switching;Application software;Robustness},
doi={10.1109/FMPC.1996.558057}
}

@inproceedings{AlQahtani2007,
author={AlQahtani, Salman A.},
booktitle={2007 International Symposium on Communications and Information Technologies}, 
title={A novel hybrid scheme of interrupt enabling - disabling and polling (EDP) for high-speed computer networks}, 
year={2007},
volume={},
number={},
pages={341-345},
keywords={Computer networks;Network interfaces;High-speed networks;Communication system control;System performance;Degradation;Communication system traffic control;Discrete event simulation;Telecommunication traffic;Traffic control;High-speed computer networks;NIC;Interrupts;Operating system;Polling;Performance evaluation},
doi={10.1109/ISCIT.2007.4392042}
}


@article{salah_coalesce_2007,
title = {To coalesce or not to coalesce},
volume = {61},
issn = {1434-8411},
url = {https://www.sciencedirect.com/science/article/pii/S143484110600063X},
doi = {https://doi.org/10.1016/j.aeue.2006.04.007},
abstract = {System performance of Gigabit network hosts can be severely degraded due to interrupt overhead caused by heavy incoming traffic. One of the most popular solutions to mitigate such overhead is interrupt coalescing in which a single interrupt is generated for multiple incoming packets. This is opposed to normal interruption in which an interrupt is generated for every incoming packet. In this paper we investigate the performance of interrupt coalescing analytically and compare it with that of normal interruption. We consider two types of coalescing (viz. count-based and time-based). The system performance is studied in terms of throughput, CPU availability for user applications, latency and packet loss.},
number = {4},
journal = {AEU - International Journal of Electronics and Communications},
author = {Salah, Khaled},
year = {2007},
keywords = {High-speed networks, Interrupt coalescing, Interrupts, Modeling and analysis, Operating systems, Performance evaluation},
pages = {215--225},
}

@article{ahmad2009improving,
title={Improving Performance with Interrupt Coalescing for Virtual Machine Disk IO in VMware ESX Server},
author={Ahmad, Irfan and Gulati, Ajay and Mashtizadeh, Ali and Austruy, Maxime},
journal={VMware Inc., Palo Alto, CA},
volume={94304},
year={2009}
}

@inproceedings{Ahmad2011vICIC,
title={vIC: Interrupt Coalescing for Virtual Machine Storage Device IO},
author={Irfan Ahmad and Ajay Gulati and Ali Jos{\'e} Mashtizadeh},
booktitle={USENIX Annual Technical Conference},
year={2011},
url={https://api.semanticscholar.org/CorpusID:16541915}
}

@inproceedings{Dong2011,
author={Dong, Yaozu and Xu, Dongxiao and Zhang, Yang and Liao, Guangdeng},
booktitle={2011 IEEE International Conference on Cluster Computing}, 
title={Optimizing Network I/O Virtualization with Efficient Interrupt Coalescing and Virtual Receive Side Scaling}, 
year={2011},
volume={},
number={},
pages={26-34},
keywords={Instruction sets;Hardware;Performance evaluation;Kernel;Optimization;Virtual machine monitors;Network I/O virtualization;Xen;Interrupt coalescing;Receive side scaling;Multi-core},
doi={10.1109/CLUSTER.2011.12}
}

@article{GuanEICS2013,
author={Guan, HaiBing and Dong, YaoZu and Ma, RuHui and Xu, Dongxiao and Zhang, Yang and Li, Jian},
journal={IEEE Transactions on Parallel and Distributed Systems}, 
title={Performance Enhancement for Network I/O Virtualization with Efficient Interrupt Coalescing and Virtual Receive-Side Scaling}, 
year={2013},
volume={24},
number={6},
pages={1118-1128},
keywords={Software;Virtual machine monitors;Hardware;Equations;Electronic mail;Mathematical model;Network I/O virtualization;Xen;interrupt coalescing;receive-side scaling;multicore},
doi={10.1109/TPDS.2012.339}
}

@inproceedings {AmyTai2021,
author = {Amy Tai and others},
title = {Optimizing Storage Performance with Calibrated Interrupts},
booktitle = {15th USENIX Symposium on Operating Systems Design and Implementation (OSDI 21)},
year = {2021},
isbn = {978-1-939133-22-9},
pages = {129--145},
month = jul,
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
}

@inproceedings{Yamasaki2006,
author={Yamasaki, Nobuyuki},
booktitle={International Workshop on Innovative Architecture for Future Generation High Performance Processors and Systems (IWIA'06)}, 
title={Responsive Multithreaded Processor for Distributed Real-Time Processing}, 
year={2006},
volume={},
number={},
pages={44-56},
keywords={Yarn;Real time systems;Hardware;Intelligent robots;Pulse width modulation;Surface-mount technology;Parallel robots;Intelligent structures;Buildings;Computer peripherals},
doi={10.1109/IWIAS.2006.36}
}

@inproceedings{Suito2012,
author={Suito, Kazutoshi and Fujii, Kei and Matsutani, Hiroki and Yamasaki, Nobuyuki},
booktitle={2012 IEEE COOL Chips XV}, 
title={Dependable Responsive Multithreaded Processor for distributed real-time systems}, 
year={2012},
volume={},
number={},
pages={1-3},
keywords={Real time systems;System-on-a-chip;Temperature sensors;Encoding;Computer architecture;SDRAM;Power supplies;real-time;distributed control;RMT Processor;Responsive Link;SoC;SiP;DVFS;dependability},
doi={10.1109/COOLChips.2012.6216589}
}

@inproceedings{Wada2019,
author={Wada, Ryo and Yamasaki, Nobuyuki},
booktitle={2019 Seventh International Symposium on Computing and Networking Workshops (CANDARW)}, 
title={Fast Interrupt Handling Scheme by Using Interrupt Wake-Up Mechanism}, 
year={2019},
volume={},
number={},
pages={109-114},
keywords={Embedded Real-Time System, SimultaneousMultithreading, Interruption, Interrupt Wake-up},
doi={10.1109/CANDARW.2019.00027}
}

@inproceedings{Lopez2022,
author={Lopez, Tomas A. and Yamasaki, Nobuyuki},
booktitle={2022 Tenth International Symposium on Computing and Networking (CANDAR)}, 
title={Prioritized Asynchronous Calls for Parallel Processing on Responsive MultiThreaded Processor}, 
year={2022},
volume={},
number={},
pages={46-55},
keywords={Runtime;Processor scheduling;Instruction sets;Interference;Parallel processing;Benchmark testing;Feature extraction;real-time systems;parallel computing;continuation-stealing;asynchronous call;runtime;futures;prioritized execution},
doi={10.1109/CANDAR57322.2022.00014}
}

@inproceedings{Dodiu2012,
author={Dodiu, E. and Gaitan, V.G. and Graur, A.},
booktitle={2012 Proceedings of the 35th International Convention MIPRO}, 
title={Custom designed CPU architecture based on a hardware scheduler and independent pipeline registers - architecture description}, 
year={2012},
volume={},
number={},
pages={859-864},
keywords={Registers;Pipelines;Context;Hardware;Switches;Clocks;Computer architecture},
doi={}
}

@inproceedings{Gaitan2014,
author={Gaitan, Nicoleta Cristina and Gaitan, Vasile Gheorghita and Moisuc, Elena-Eugenia Ciobanu},
booktitle={2014 International Conference on Development and Application Systems (DAS)}, 
title={Improving interrupt handling in the nMPRA}, 
year={2014},
volume={},
number={},
pages={11-15},
keywords={Hardware;Registers;Real-time systems;Computer architecture;Pipelines;Context;Software;hardware scheduler;interrupt;microprocessor;pipeline register;real time system},
doi={10.1109/DAAS.2014.6842419}
}

@article{ZAGAN2017,
title = {An Approach of nMPRA Architecture using Hardware Implemented Support for Event Prioritization and Treating},
journal = {International Journal of Advanced Computer Science and Applications},
doi = {10.14569/IJACSA.2017.080206},
url = {http://dx.doi.org/10.14569/IJACSA.2017.080206},
year = {2017},
publisher = {The Science and Information Organization},
volume = {8},
number = {2},
author = {Ionel ZAGAN and Nicoleta Cristina GAITAN and Vasile Gheorghita GAITAN}
}

@inproceedings{Gao1996,
author={Gao, G.R. and Hum, H.H.J. and Theobald, K.B. and Xin-Min Tian and Maquelin, O.},
booktitle={23rd Annual International Symposium on Computer Architecture (ISCA'96)}, 
title={Polling Watchdog: Combining Polling and Interrupts for Efficient Message Handling}, 
year={1996},
volume={},
number={},
pages={179-179},
keywords={Multithreading;Message passing;Delay;Hardware;Earth;Computer architecture;Yarn;Computational modeling;Measurement;Performance evaluation;2-level adaptive prediction;branch prediction;correlation;system traces},
doi={10.1145/232973.232992}
}

@article{Gomes2015,
author={Gomes, Tiago and Garcia, Paulo and Salgado, Filipe and Monteiro, João and Ekpanyapong, Mongkol and Tavares, Adriano},
journal={IEEE Embedded Systems Letters}, 
title={Task-Aware Interrupt Controller: Priority Space Unification in Real-Time Systems}, 
year={2015},
volume={7},
number={1},
pages={27-30},
keywords={Message systems;Real-time systems;Aerospace electronics;Registers;Instruction sets;Hardware;Priority space;real-time systems},
doi={10.1109/LES.2015.2397604}
}

@inproceedings{Erwin1970,
author = {Erwin, Jerry D. and Jensen, E. Douglas},
title = {Interrupt processing with queued content-addressable memories},
year = {1970},
isbn = {9781450379045},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1478462.1478553},
doi = {10.1145/1478462.1478553},
abstract = {One of the most significant problems in designing high performance computing systems is the complexity of the associated supervisory software. This is especially true in multi-user environments: the software overhead involved in user communications and resource allocation normally absorbs a great percentage of the system's computing power.},
booktitle = {Proceedings of the November 17-19, 1970, Fall Joint Computer Conference},
pages = {621–627},
numpages = {7},
location = {Houston, Texas},
series = {AFIPS '70 (Fall)}
}

@inproceedings{SchelerHOPSL09,
author       = {Fabian Scheler and
Wanja Hofer and
Benjamin Oechslein and
Rudi Pfister and
Wolfgang Schr{\"{o}}der{-}Preikschat and
Daniel Lohmann},
editor       = {J{\"{o}}rg Henkel and
Sri Parameswaran},
title        = {Parallel, hardware-supported interrupt handling in an event-triggered
real-time operating system},
booktitle    = {Proceedings of the 2009 International Conference on Compilers, Architecture,
and Synthesis for Embedded Systems, {CASES} 2009, Grenoble, France,
October 11-16, 2009},
pages        = {167--174},
publisher    = {{ACM}},
year         = {2009},
url          = {https://doi.org/10.1145/1629395.1629419},
doi          = {10.1145/1629395.1629419},
timestamp    = {Sun, 25 Oct 2020 22:46:52 +0100},
biburl       = {https://dblp.org/rec/conf/cases/SchelerHOPSL09.bib},
bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{Caulfield2010,
author={Caulfield, Adrian M. and De, Arup and Coburn, Joel and Mollow, Todor I. and Gupta, Rajesh K. and Swanson, Steven},
booktitle={2010 43rd Annual IEEE/ACM International Symposium on Microarchitecture}, 
title={Moneta: A High-Performance Storage Array Architecture for Next-Generation, Non-volatile Memories}, 
year={2010},
volume={},
number={},
pages={385-395},
keywords={Software;Bandwidth;Phase change materials;Hardware;Arrays;Optimization;Nonvolatile memory;software IO optimizations;non-volatile memories;phase change memories;storage systems},
doi={10.1109/MICRO.2010.33}
}

@inproceedings {Yang2012,
title = {When Poll Is Better than Interrupt},
author={Yang, Jisoo and Minturn, Dave B and Hady, Frank T},
booktitle = {10th USENIX Conference on File and Storage Technologies (FAST 12)},
year = {2012},
address = {San Jose, CA},
url = {https://www.usenix.org/conference/fast12/when-poll-better-interrupt},
publisher = {USENIX Association},
month = feb
}

@inproceedings {Dejan2014,
author = {Dejan Vu{\v c}ini{\'c} and Qingbo Wang and Cyril Guyot and Robert Mateescu and Filip Blagojevi{\'c} and Luiz Franca-Neto and Damien Le Moal and Trevor Bunker and Jian Xu and Steven Swanson and Zvonimir Bandi{\'c}},
title = {{DC} Express: Shortest Latency Protocol for Reading Phase Change Memory over {PCI} Express},
booktitle = {12th USENIX Conference on File and Storage Technologies (FAST 14)},
year = {2014},
isbn = {ISBN 978-1-931971-08-9},
address = {Santa Clara, CA},
pages = {309--315},
url = {https://www.usenix.org/conference/fast14/technical-sessions/presentation/vucinic},
publisher = {USENIX Association},
month = feb
}

@article{Lee2022,
author = {Lee, Gyusun and Shin, Seokha and Jeong, Jinkyu},
title = {Efficient hybrid polling for ultra-low latency storage devices},
year = {2022},
issue_date = {Jan 2022},
publisher = {Elsevier North-Holland, Inc.},
address = {USA},
volume = {122},
number = {C},
issn = {1383-7621},
url = {https://doi.org/10.1016/j.sysarc.2021.102338},
doi = {10.1016/j.sysarc.2021.102338},
journal = {J. Syst. Archit.},
month = {jan},
numpages = {12},
keywords = {Hybrid polling, Operating systems, System software, I/O completion}
}

@article{wierman2012tail,
title={Is tail-optimal scheduling possible?},
author={Wierman, Adam and Zwart, Bert},
journal={Operations research},
volume={60},
number={5},
pages={1249--1257},
year={2012},
publisher={INFORMS}
}

@inproceedings{prekas2017zygos,
title={Zygos: Achieving low tail latency for microsecond-scale networked tasks},
author={Prekas, George and Kogias, Marios and Bugnion, Edouard},
booktitle={Proceedings of the 26th Symposium on Operating Systems Principles},
pages={325--341},
year={2017}
}

@inproceedings{iyer2023achieving,
title={Achieving microsecond-scale tail latency efficiently with approximate optimal scheduling},
author={Iyer, Rishabh and Unal, Musa and Kogias, Marios and Candea, George},
booktitle={Proceedings of the 29th Symposium on Operating Systems Principles},
pages={466--481},
year={2023}
}

@inproceedings{kaffes2019shinjuku,
title={Shinjuku: Preemptive Scheduling for $\{$$\mu$second-scale$\}$ Tail Latency},
author={Kaffes, Kostis and Chong, Timothy and Humphries, Jack Tigar and Belay, Adam and Mazi{\`e}res, David and Kozyrakis, Christos},
booktitle={16th USENIX Symposium on Networked Systems Design and Implementation (NSDI 19)},
pages={345--360},
year={2019}
}

@inproceedings{ousterhout2019shenango,
title={Shenango: Achieving high $\{$CPU$\}$ efficiency for latency-sensitive datacenter workloads},
author={Ousterhout, Amy and Fried, Joshua and Behrens, Jonathan and Belay, Adam and Balakrishnan, Hari},
booktitle={16th USENIX Symposium on Networked Systems Design and Implementation (NSDI 19)},
pages={361--378},
year={2019}
}

@inproceedings{jia2024skyloft,
title={Skyloft: A General High-Efficient Scheduling Framework in User Space},
author={Jia, Yuekai and Tian, Kaifu and You, Yuyang and Chen, Yu and Chen, Kang},
booktitle={Proceedings of the ACM SIGOPS 30th Symposium on Operating Systems Principles},
pages={265--279},
year={2024}
}

@misc{x86_uintr,
title = {x86 {User} {Interrupts} support},
url = {https://lwn.net/Articles/869140/},
urldate = {2024-09-02},
year = {2021},
author = {Sohil Mehta},
}

@inproceedings{zhang2021demikernel,
title={The demikernel datapath os architecture for microsecond-scale datacenter systems},
author={Zhang, Irene and Raybuck, Amanda and Patel, Pratyush and Olynyk, Kirk and Nelson, Jacob and Leija, Omar S Navarro and Martinez, Ashlie and Liu, Jing and Simpson, Anna Kornfeld and Jayakar, Sujay and others},
booktitle={Proceedings of the ACM SIGOPS 28th Symposium on Operating Systems Principles},
pages={195--211},
year={2021}
}

@misc{embassy,
title = {{Modern} embedded framework, using {Rust} and async.},
url = {https://github.com/embassy-rs/embassy},
urldate = {2024-01-04},
year = {2023},
author = {Embassy}
}

@misc{embassy_vs_freetos,
title = {Async {Rust} vs {RTOS} showdown! - {Blog} - {Tweede} golf},
url = {https://tweedegolf.nl/en/blog/65/async-rust-vs-rtos-showdown},
urldate = {2025-03-04},
year = {2022},
author = {Dion},
}

@inproceedings {Xuhao2022,
author = {Xuhao Luo and Weihai Shen and Shuai Mu and Tianyin Xu},
title = {{DepFast}: Orchestrating Code of Quorum Systems},
booktitle = {2022 USENIX Annual Technical Conference (USENIX ATC 22)},
year = {2022},
isbn = {978-1-939133-29-14},
address = {Carlsbad, CA},
pages = {557--574},
url = {https://www.usenix.org/conference/atc22/presentation/luo},
publisher = {USENIX Association},
month = jul
}

@inproceedings{vonBehren2003,
author = {von Behren, Rob and Condit, Jeremy and Zhou, Feng and Necula, George C. and Brewer, Eric},
title = {Capriccio: scalable threads for internet services},
year = {2003},
isbn = {1581137575},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/945445.945471},
doi = {10.1145/945445.945471},
booktitle = {Proceedings of the Nineteenth ACM Symposium on Operating Systems Principles},
pages = {268–281},
numpages = {14},
keywords = {user-level threads, resource-aware scheduling, linked stack management, dynamic stack growth, blocking graph},
location = {Bolton Landing, NY, USA},
series = {SOSP '03}
}

@phdthesis{saltzer1966traffic,
title={Traffic control in a multiplexed computer system},
author={Saltzer, Jerome Howard},
year={1966},
school={Massachusetts Institute of Technology}
}

@article{dijkstra1968structure,
title={The structure of the “THE”-multiprogramming system},
author={Dijkstra, Edsger W},
journal={Communications of the ACM},
volume={11},
number={5},
pages={341--346},
year={1968},
publisher={ACM New York, NY, USA}
}

@article{ritchie1974unix,
title={The UNIX time-sharing system},
author={Ritchie, Dennis M and Thompson, Ken},
journal={Communications of the ACM},
volume={17},
number={7},
pages={365--375},
year={1974},
publisher={ACM New York, NY, USA}
}

@misc{VonNeumann,
title = {冯诺伊曼结构},
copyright = {Creative Commons Attribution-ShareAlike License},
url = {https://en.wikipedia.org/wiki/Von_Neumann_architecture},
language = {zh-Hans-CN},
urldate = {2025-03-05},
month = nov,
year = {2024},
author = {Wikipedia}
}

@book{marlin1980coroutines,
title={Coroutines: a programming methodology, a language design and an implementation},
author={Marlin, Christopher D},
number={95},
year={1980},
publisher={Springer Science \& Business Media}
}

@article{moura2009revisiting,
title={Revisiting coroutines},
author={Moura, Ana L{\'u}cia De and Ierusalimschy, Roberto},
journal={ACM Transactions on Programming Languages and Systems (TOPLAS)},
volume={31},
number={2},
pages={1--31},
year={2009},
publisher={ACM New York, NY, USA}
}

@mastersthesis{gewenbo2023,
author = {葛文博},
title = {众核环境下嵌入式实时操作系统中调度处理的研究},
school = {中国电子科技集团公司电子科学研究院},
year = {2023}
}

@inproceedings{Linjiazhen2024,
author = {Lin, Jiazhen and Chen, Youmin and Gao, Shiwei and Lu, Youyou},
title = {Fast Core Scheduling with Userspace Process Abstraction},
year = {2024},
isbn = {9798400712517},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3694715.3695976},
doi = {10.1145/3694715.3695976},
booktitle = {Proceedings of the ACM SIGOPS 30th Symposium on Operating Systems Principles},
pages = {280–295},
numpages = {16},
location = {Austin, TX, USA},
series = {SOSP '24}
}


@misc{riscv,
title = {{RISC}-{V} {Ratified} {Specifications}},
url = {https://riscv.org/specifications/ratified/},
abstract = {The RISC-V open-standard instruction set architecture (ISA) defines the fundamental guidelines for designing and implementing RISC-V processors.},
language = {en-US},
urldate = {2025-03-06},
year = {2025},
author = {RISC-V},
}

@article{pintouser,
title={User Mode Interrupts},
author={Pinto, Sandro and Garlati, Cesare},
year = {2019}
}


@misc{rocket-chip,
	title = {{Rocket} {Chip} {Generator}},
	url = {https://github.com/chipsalliance/rocket-chip},
	urldate = {2025-03-12},
    author = {chipsalliance},
}

@misc{sel4_2025,
	title = {The seL4 microkernel},
	url = {https://github.com/seL4/seL4},
	urldate = {2025-03-13},
	author = {seL4}
}

@misc{rel4_kernel,
	title = {reL4\_kernel, The Rust version of seL4},
	url = {https://github.com/rel4team/rel4_kernel},
	urldate = {2025-03-13},
	author = {rel4team}
}

@misc{tokio,
	title = {Tokio - {An} asynchronous {Rust} runtime},
	url = {https://tokio.rs/},
	urldate = {2025-03-13},
	author = {tokio-rs}
}

@misc{ipc-bench_2025,
	title = {ipc-bench},
	copyright = {MIT},
	url = {https://github.com/goldsborough/ipc-bench},
	abstract = {:racehorse: Benchmarks for Inter-Process-Communication Techniques},
	urldate = {2025-03-13},
	author = {Goldsborough, Peter},
	month = mar,
	year = {2025},
	note = {original-date: 2016-04-18T09:39:35Z},
}
